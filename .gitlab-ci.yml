stages:
  - compile
  - unit test
  - docker
  - api test

build jar:
  stage: compile
  image: openjdk:12-alpine
  script:
    - ./gradlew build -x test
  artifacts:
    paths:
      - ./build/libs/

junit:
  stage: unit test
  image: openjdk:12-alpine
  script:
    - ./gradlew test

docker:
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull --tag "$CI_REGISTRY_IMAGE:$CI_PIPELINE_IID" .
    - docker push "$CI_REGISTRY_IMAGE"

postman:
  services:
    - name: $CI_REGISTRY_IMAGE
      alias: customers
  stage: api test
  image:
    name: vdespa/newman
    entrypoint: [""]
  script:
    - echo $CI_REGISTRY_IMAGE
    - newman --version
    - newman run "./api-tests/[API tests] Customers Service.postman_collection.json" --environment "./api-tests/Customers Service Github Docker.postman_environment.json"
